"""
Quick setup script to configure Job Agent Service
Copies Groq API key from chatbot service and creates .env file
"""

import os
import shutil

def setup_job_agent_env():
    print("=" * 60)
    print("  PathWise Job Agent - Environment Setup")
    print("=" * 60)
    print()
    
    # Paths
    chatbot_env = 'chatbot_service/.env'
    job_agent_dir = 'job_agent_service'
    job_agent_env = f'{job_agent_dir}/.env'
    job_agent_example = f'{job_agent_dir}/.env.example'
    
    # Check if chatbot .env exists
    if not os.path.exists(chatbot_env):
        print("‚ùå chatbot_service/.env not found!")
        print("   Please set up your Groq API key in chatbot_service/.env first")
        return False
    
    # Read Groq API key from chatbot service
    groq_key = None
    with open(chatbot_env, 'r') as f:
        for line in f:
            if line.startswith('GROQ_API_KEY='):
                groq_key = line.split('=', 1)[1].strip()
                break
    
    if not groq_key or groq_key == 'your_api_key_here':
        print("‚ùå No valid Groq API key found in chatbot_service/.env")
        print("   Please add your Groq API key to chatbot_service/.env first")
        return False
    
    print(f"‚úÖ Found Groq API key: {groq_key[:20]}...")
    print()
    
    # Create job_agent_service directory if it doesn't exist
    if not os.path.exists(job_agent_dir):
        os.makedirs(job_agent_dir)
        print(f"‚úÖ Created directory: {job_agent_dir}")
    
    # Create .env file for job agent
    env_content = f"""# PathWise Job Agent Service Configuration
# Auto-generated by setup_job_agent_env.py

# Groq API (Required for AI matching and fallback job generation)
GROQ_API_KEY={groq_key}

# Optional: RapidAPI for real job listings from LinkedIn/Indeed/Glassdoor
# Sign up at: https://rapidapi.com/letscrape-6bRBa3QguO5/api/jsearch
# Free tier: 250 requests/month
RAPIDAPI_KEY=

# Optional: Adzuna API for backup job source
# Sign up at: https://developer.adzuna.com/
ADZUNA_APP_ID=
ADZUNA_API_KEY=

# MongoDB
MONGODB_URI=mongodb://localhost:27017/

# Server Configuration
PORT=5007
"""
    
    with open(job_agent_env, 'w') as f:
        f.write(env_content)
    
    print(f"‚úÖ Created {job_agent_env}")
    print()
    
    # Create .env.example if it doesn't exist
    if not os.path.exists(job_agent_example):
        example_content = """# PathWise Job Agent Service Configuration

# Groq API (Required for AI matching and fallback job generation)
# Get free API key from: https://console.groq.com
GROQ_API_KEY=your_groq_api_key_here

# RapidAPI Key (Recommended - for real LinkedIn/Indeed/Glassdoor jobs)
# Get free tier (250 requests/month) from: https://rapidapi.com/letscrape-6bRBa3QguO5/api/jsearch
RAPIDAPI_KEY=your_rapidapi_key_here

# Adzuna API (Optional - backup source for real jobs)
# Get free tier from: https://developer.adzuna.com/
ADZUNA_APP_ID=your_adzuna_app_id
ADZUNA_API_KEY=your_adzuna_api_key

# MongoDB
MONGODB_URI=mongodb://localhost:27017/

# Server Configuration
PORT=5007
"""
        with open(job_agent_example, 'w') as f:
            f.write(example_content)
        print(f"‚úÖ Created {job_agent_example}")
        print()
    
    print("=" * 60)
    print("  Configuration Complete!")
    print("=" * 60)
    print()
    print("Next steps:")
    print()
    print("1. (Optional) Add RapidAPI key for real job listings:")
    print(f"   Edit {job_agent_env}")
    print("   Sign up: https://rapidapi.com/letscrape-6bRBa3QguO5/api/jsearch")
    print()
    print("2. Start the Job Agent service:")
    print("   start_job_agent.bat")
    print()
    print("3. Test it:")
    print("   python test_job_agent.py")
    print()
    print("4. Open your dashboard Jobs page and see real jobs!")
    print()
    print("=" * 60)
    print()
    
    return True


if __name__ == "__main__":
    try:
        success = setup_job_agent_env()
        if success:
            print("üéâ Setup successful! Ready to start the Job Agent.")
        else:
            print("‚ùå Setup failed. Please check the errors above.")
    except Exception as e:
        print(f"‚ùå Error during setup: {e}")
        print()
        print("Please ensure:")
        print("1. You're running this from the PathWise root directory")
        print("2. chatbot_service/.env exists with a valid GROQ_API_KEY")

